name: Lab9 - Génie logiciel
run-name: LAB9 de ${{ github.actor }} 

# Sur quelles conditions le workflow doit-il être déclenché ?

on:
  schedule:
    - cron: '0 8 * * 1'  # Lundi à 08:00 UTC
  push:
    paths-ignore:
      - 'docs/**'
    branches: [main, lab9] #J'ai rajouté lab9 pour faciliter mes tests
  pull_request:
  workflow_dispatch:
    inputs:
      run_analyse:
        description: 'Exécuter les analyses statiques ? (false/true)'
        required: false
        default: true
        type: boolean
      run_tests:
        description: 'Exécuter les tests ? (false/true)'
        required: false
        default: true
        type: boolean

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: pnpm/action-setup@v4
      - run: pnpm install

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: pnpm/action-setup@v4
      - run: pnpm install
      - run: pnpm build
      - uses: actions/upload-artifact@v4
        if: github.ref_name == 'main'
        with:
          name: build-output
          path: dist/
          retention-days: ${{ github.ref_name == github.event.repository.default_branch && 7 || 1 }}

  lint:
    if: github.event_name == 'pull_request' || github.event.inputs.run_analyse == 'true'
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: pnpm/action-setup@v4
      - run: pnpm install
      - run: pnpm lint

  type-check:
    if: github.event_name == 'pull_request' || github.event.inputs.run_analyse == 'true'
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: pnpm/action-setup@v4
      - run: pnpm install
      - run: pnpm type-check

  test:
    if: github.event_name == 'pull_request' || github.event.inputs.run_tests == 'true'
    needs: [setup, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: pnpm/action-setup@v4
      - run: pnpm install
      - run: pnpm test

  deploy:
    if: github.event_name == 'workflow_dispatch' 
    needs: build
    runs-on: ubuntu-latest
    environment: production #J'aurais dû appeller ça autrement, je modifierai par "deploiement" plus tard
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: pnpm/action-setup@v4
      - run: pnpm install

      - name: Récupération du build
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: dist/
      
      - name: Déploiement QA
        run: |
             echo "Déploiement sur QA en cours..." &&
             pnpx @azure/static-web-apps-cli deploy ./dist --app-name stapp-vue2048-qa --env=production --deployment-token ${{ secrets.AZURE_STATIC_WEB_APPS_TOKEN }}
        

      - name: Déploiement PROD
        run: |
             echo "Déploiement sur PROD en cours..." &&
             pnpx @azure/static-web-apps-cli deploy ./dist --app-name stapp-vue2048-prod --env=production --deployment-token ${{ secrets.AZURE_STATIC_WEB_APPS_TOKEN }}
      
      
      